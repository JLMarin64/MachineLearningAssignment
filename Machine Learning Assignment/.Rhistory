trainCapAve <- training$capitalAve
trainCapAveS <- (trainCapAve - mean(trainCapAve))/sd(trainCapAve)
mean(trainCapAveS)
mean(trainCapAveS)
sd(trainCapAveS)
testCapAveS <- (testCapAve - mean(trainCapAve))/sd(trainCapAve)
library(caret)
data("faithful")
data(faithful)
set.seed(333)
inTrain <- createDataPartition(y=faithful$waiting, p = .5, list = FALSE)
trainFaith <- faithful[inTrain,]
testFaith <- faithful[-inTrain,]
head(trainFaith)
plot(trainFaith$waiting, trainFaith$eruptions, pch = 19, col = "blue")
lm1 = lm(eruptions ~ waiting, data = trainFaith)
summary(lm1)
plot(trainFaith$waiting, trainFaith$eruptions, pch = 19, col = "blue")
lines(trainFaith$waiting, lm1$fitted, lwd = 3)
coef(lm1[1] + coef(lm1)[2]*80)
coef(lm1)[1] + coef(lm1)[2]*80)
coef(lm1)[1] + coef(lm1)[2]*80
newdata <- data.frame(waiting = 80)
predict(lm1, newdata)
sqrt(sum((lm1$fitted-trainFaith$eruptions)^2))
sqrt(sum((predict(lm1, newdata = testFaith)-testFaith$eruptions)^2))
pred1 <- predict(lm1, newdata= testFaith, interval= "prediction")
ord <- order(testFaith$waiting)
plot(testFaith, testFaith$eruptions, pch= 19, col = "blue")
matlines(testFaith$waiting[ord, pred1[ord,], type="l"],,col=c(1,2,2), lty = c(1,1,1), lwd=3)
matlines(testFaith$waiting[ord], pred1[ord,], type="l"],,col=c(1,2,2), lty = c(1,1,1), lwd=3)
matlines(testFaith$waiting[ord], pred1[ord,], type="l",,col=c(1,2,2), lty = c(1,1,1), lwd=3)
matlines(testFaith$waiting[ord], pred1[ord,], type="l",,col=c(1,2,2), lty = c(1,1,1), lwd=3)
modFit <- train(eruptions ~ waiting, data = trainFaith, method = "lm")
summary(modFit$finalModel)
library(ISLR)
library(ggplot2)
library(caret)
data(Wage)
Wage <- subset(Wage, select = -c(logwage))
summary(Wage)
inTrain <- createDataPartition(y=Wage$wage, p=.7, list = FALSE)
inTrain <- createDataPartition(y=Wage$wage, p=.7, list = FALSE)
training <- Wage[inTrain,]
test <- Wage[-inTrain,]
dim(training)
dim(test)
featurePlot(x=training[,c("age", "education", "jobclass")], y = training$wage, plot= "pairs")
qplot(age, wage, data = training)
qplot(age, wage, colour = jobclass, data = training)
qplot(age, wage, colour = education, data = training)
modFit <- train(wage ~ age + jobclass + education, method = "lm", data = training)
finMod <- modFit$finalModel
print(modFit)
modFit <- train(wage ~ age + jobclass + education, method = "lm", data = training)
finMod <- modFit$finalModel
print(modFit)
plot(finMod, 1, pch= 19, cex = .5, col="#000000010")
plot(finMod, 1, pch= 19, cex = .5, col="#00000010")
qplot(finMod$fitted, finMod$residuals, colour = race, data = training)
library(AppliedPredictiveModeling)
data(concrete)
library(caret)
set.seed(1000)
inTrain = createDataPartition(mixtures$CompressiveStrength, p = 3/4)[[1]]
training = mixtures[ inTrain,]
testing = mixtures[-inTrain,]
library(rattle)
install.packages("rattle")
data(iris)
data(iris)
library(ggplot2)
names(iris)
table(iris$Species)
data(iris)
library(ggplot2)
names(iris)
table(iris$Species)
inTrain <- createDataPartition(y=iris$Species, p= .7, list = FALSE)
training <- iris[inTrain,]
testing <- iris[inTrain,]
dim(training); dim(testing)
qplot(Petal.Width, Sepal.Width, colour = Species, data = training)
library(caret)
modFit <- train(Species ~., method = "rpart", data = training)
print(modFit$finalModel)
plot(modFit$finalModel, uniform = TRUE, main = "Classification Tree")
text(modFit$finalModel, use.n=TRUE, all=TRUE, cex=.8)
text(modFit$finalModel, use.n=TRUE, all=TRUE, cex=.8)
plot(modFit$finalModel, uniform = TRUE, main = "Classification Tree")
text(modFit$finalModel, use.n=TRUE, all=TRUE, cex=.8)
text(modFit$finalModel, use.n=TRUE, all=TRUE, cex=.8)
plot(modFit$finalModel, uniform = TRUE, main = "Classification Tree")
plot(modFit$finalModel, uniform = TRUE, main = "Classification Tree")
text(modFi
plot(modFit$finalModel, uniform = TRUE, main = "Classification Tree")
modFit <- train(Species ~., method = "rpart", data = training)
print(modFit$finalModel)
plot(modFit$finalModel, uniform = TRUE, main = "Classification Tree")
text(modFit$finalModel, use.n = TRUE, all = TRUE, cex=.8)
install.packages("rattle")
library(rattle)
library(rattle)
library(rattle)
library(rattle)
fancyRpartPlot(modFit$finalModel)
fancyRpartPlot(modFit$finalModel)
library(rattle)
library(RGtk2)
fancyRpartPlot(modFit$finalModel)
fancyRpartPlot(modFit$finalModel)
installed.packages(rattle)
library(rattle)
install.packages(rattle)
install.packages("rattle")
library(rattle)
data(iris)
library(ggplot2)
names(iris)
table(iris$Species)
inTrain <- createDataPartition(y=iris$Species, p= .7, list = FALSE)
data(iris)
library(ggplot2)
library(caret)
names(iris)
table(iris$Species)
inTrain <- createDataPartition(y=iris$Species, p= .7, list = FALSE)
training <- iris[inTrain,]
testing <- iris[inTrain,]
dim(training); dim(testing)
qplot(Petal.Width, Sepal.Width, colour = Species, data = training)
modFit <- train(Species ~., method = "rpart", data = training)
print(modFit$finalModel)
plot(modFit$finalModel, uniform = TRUE, main = "Classification Tree")
text(modFit$finalModel, use.n = TRUE, all = TRUE, cex=.8)
library(rattle)
fancyRpartPlot(modFit$finalModel)
library(ElemStatLearn)
data(prostate)
str(prostate)
setwd("C:/Users/Marin Family/Documents/R/Machine Learning Assignment")
getwd()
trainingdata <- read.csv("pml-training")
trainingdata <- read.csv("pml-training.csv")
View(trainingdata)
testingdata <- read.csv("pml.testing.csv")
testingdata <- read.csv("pml-testing.csv")
dim(trainingdata)
dim(trainingdata)
dim(testingdata)
trainingdata <- trainingdata[, colSums(is.na(trainingdata))==0]
dim(trainingdata)
trainingdata <- read.csv(file="pml-training.csv", na.strings=c("", "NA"), sep="\t")
trainingdata <- read.csv(file="pml-training.csv", na.strings=c("", "NA"))
trainingdata <- trainingdata[,!apply(trainingdata,2,function(x) any(is.na(x)))]
set.seed(1234)
library(caret)
library(randomForest)
training <- read.csv(file="pml-training.csv")
testing <- read.csv(file="pml-testing.csv")
#Set Seed
set.seed(1234)
#Load Downloaded Train and Test Files from Working Directory
training <- read.csv(file="pml-training.csv")
testing <- read.csv(file="pml-testing.csv")
inTrain <- createDataPartition(y=training$classe, p=.7, list = FALSE)
trainset <- training[inTrain,]
testset <- training[-inTrain,]
dim(trainset)
dim(testset)
inTrain <- createDataPartition(y=training$classe, p=.7, list = FALSE)
training <- read.csv(file="pml-training.csv")
testing <- read.csv(file="pml-testing.csv")
inTrain <- createDataPartition(y=training$classe, p=.7, list = FALSE)
trainset <- training[inTrain,]
#My Test Data
mytestset <- training[-inTrain,]
dim(trainset)
dim(mytestset)
#Coursera Test Data
testset <- read.csv("pml-testing.csv")
dim(testset)
View(training)
#Load Libraries
library(caret)
library(randomForest)
#Set Working Direcotry
setwd("C:/Users/Marin Family/Documents/R/Machine Learning Assignment")
#Set Seed
set.seed(1234)
#Load Downloaded Train and Test Files from Working Directory
training <- read.csv(file="pml-training.csv")
testing <- read.csv(file="pml-testing.csv")
inTrain <- createDataPartition(y=training$classe, p=.7, list = FALSE)
trainset <- training[inTrain,]
#Create My Test Data
mytestset <- training[-inTrain,]
dim(trainset)
dim(mytestset)
#Load Coursera Test Data
testset <- read.csv("pml-testing.csv")
dim(testset)
trainset <- trainset[, colSums(is.na(trainset))]
trainset <- trainset[, colSums(is.na(trainset)) == 0]
dim(trainset)
mytestset <- testset[, colsums(is.na(testset)) == 0]
mytestset <- testset[, colSums(is.na(testset)) == 0]
dim(trainset)
dim(mytestset)
mytestset <- mytestset[, colSums(is.na(mytestset)) == 0]
---
title: "Machine Learning Assignment"
author: "JM"
date: "August 6, 2017"
output: html_document
---
#Overview
Using devices such as Jawbone Up, Nike FuelBand, and Fitbit it is now possible to collect a large amount of data about personal activity relatively inexpensively. These type of devices are part of the quantified self movement â€“ a group of enthusiasts who take measurements about themselves regularly to improve their health, to find patterns in their behavior, or because they are tech geeks. One thing that people regularly do is quantify how much of a particular activity they do, but they rarely quantify how well they do it. In this project, your goal will be to use data from accelerometers on the belt, forearm, arm, and dumbell of 6 participants. They were asked to perform barbell lifts correctly and incorrectly in 5 different ways.
#Objective
The goal is to predict the manner in which they did the exercise. This is the "classe" variable in the training set.
#Load the Data
In this R snippe
```{r setup, include=FALSE}
#Load Libraries
library(caret)
library(randomForest)
#Set Working Direcotry
setwd("C:/Users/Marin Family/Documents/R/Machine Learning Assignment")
#Set Seed
set.seed(1234)
#Load Downloaded Train and Test Files from Working Directory
training <- read.csv(file="pml-training.csv")
testing <- read.csv(file="pml-testing.csv")
inTrain <- createDataPartition(y=training$classe, p=.7, list = FALSE)
trainset <- training[inTrain,]
#Create My Test Data
mytestset <- training[-inTrain,]
dim(trainset)
dim(mytestset)
#Load Coursera Test Data
testset <- read.csv("pml-testing.csv")
dim(testset)
```
## Evaluate the Data for NULLS and Zero Variance
Need to remove variables with too many NULLS (NA Values) and remove variables
```{r}
trainset <- trainset[, colSums(is.na(trainset)) == 0]
mytestset <- mytestset[, colSums(is.na(mytestset)) == 0]
dim(trainset)
dim(mytestset)
dim(testset)
```
trainset <- trainset[, colSums(is.na(trainset)) == 0]
mytestset <- mytestset[, colSums(is.na(mytestset)) == 0]
testset <- testset[, colSums(is.na(testset)) == 0]
dim(trainset)
dim(mytestset)
dim(testset)
training <- training[, colSums(is.na(training))==0]
dim(training)
training <- read.csv(file="pml-training.csv")
testing <- read.csv(file="pml-testing.csv")
training <- training[, colSums(is.na(training))==0]
dim(training)
training <- read.csv(file="pml-training.csv", na.strings=c("", "NA", "NULL"))
testing <- read.csv(file="pml-testing.csv"), na.strings=c("", "NA", "NULL"))
training <- read.csv(file="pml-training.csv", na.strings=c("", "NA", "NULL"))
testing <- read.csv(file="pml-testing.csv", na.strings=c("", "NA", "NULL"))
training <- training[, colSums(is.na(training))==0]
dim(training)
training=training[,-c(1:7)]
dim(training)
testing <- testing[, -c(1:7)]
dim(training)
dim(testing)
dim(trainset)
dim(mytestset)
---
title: "Machine Learning Assignment"
author: "JM"
date: "August 6, 2017"
output: html_document
---
#Overview
Using devices such as Jawbone Up, Nike FuelBand, and Fitbit it is now possible to collect a large amount of data about personal activity relatively inexpensively. These type of devices are part of the quantified self movement â€“ a group of enthusiasts who take measurements about themselves regularly to improve their health, to find patterns in their behavior, or because they are tech geeks. One thing that people regularly do is quantify how much of a particular activity they do, but they rarely quantify how well they do it. In this project, your goal will be to use data from accelerometers on the belt, forearm, arm, and dumbell of 6 participants. They were asked to perform barbell lifts correctly and incorrectly in 5 different ways.
#Objective
The goal is to predict the manner in which they did the exercise. This is the "classe" variable in the training set.
#Load the Data
In this R snippe
```{r setup, include=FALSE}
#Load Libraries
library(caret)
library(randomForest)
#Set Working Direcotry
setwd("C:/Users/Marin Family/Documents/R/Machine Learning Assignment")
#Set Seed
set.seed(1234)
#Load Downloaded Train and Test Files from Working Directory
training <- read.csv(file="pml-training.csv", na.strings=c("", "NA", "NULL"))
testing <- read.csv(file="pml-testing.csv", na.strings=c("", "NA", "NULL"))
#Remove NA columns and indentifier columns
training <- training[, colSums(is.na(training))==0]
dim(training)
#After review, the first 7 columns as they do not seem relevant to the outcome.
training <- training[,-c(1:7)]
testing <- testing[, -c(1:7)]
dim(training)
dim(testing)
#Create my test set
inTrain <- createDataPartition(y=training$classe, p=.7, list = FALSE)
trainset <- training[inTrain,]
#Create My Test Data
mytestset <- training[-inTrain,]
dim(trainset)
dim(mytestset)
#Load Coursera Test Data
testset <- read.csv("pml-testing.csv")
dim(testset)
```
## Evaluate the Data for NULLS and Zero Variance
Need to remove variables with too many NULLS (NA Values) and remove variables
```{r}
```
library(caret)
library(randomForest)
setwd("C:/Users/Marin Family/Documents/R/Machine Learning Assignment")
#Set Seed
set.seed(1234)
training <- read.csv(file="pml-training.csv", na.strings=c("", "NA", "NULL"))
testing <- read.csv(file="pml-testing.csv", na.strings=c("", "NA", "NULL"))
training <- training[, colSums(is.na(training))==0]
dim(training)
training <- training[,-c(1:7)]
testing <- testing[, -c(1:7)]
dim(training)
dim(testing)
inTrain <- createDataPartition(y=training$classe, p=.7, list = FALSE)
trainset <- training[inTrain,]
#Create My Test Data
mytestset <- training[-inTrain,]
dim(trainset)
dim(mytestset)
testset <- read.csv("pml-testing.csv")
dim(testset)
testset <- c[training,]
---
title: "Machine Learning Assignment"
author: "JM"
date: "August 6, 2017"
output: html_document
---
#Overview
Using devices such as Jawbone Up, Nike FuelBand, and Fitbit it is now possible to collect a large amount of data about personal activity relatively inexpensively. These type of devices are part of the quantified self movement â€“ a group of enthusiasts who take measurements about themselves regularly to improve their health, to find patterns in their behavior, or because they are tech geeks. One thing that people regularly do is quantify how much of a particular activity they do, but they rarely quantify how well they do it. In this project, your goal will be to use data from accelerometers on the belt, forearm, arm, and dumbell of 6 participants. They were asked to perform barbell lifts correctly and incorrectly in 5 different ways.
#Objective
The goal is to predict the manner in which they did the exercise. This is the "classe" variable in the training set.
#Load the Data
In this R snippe
```{r setup, include=FALSE}
#Load Libraries
library(caret)
library(randomForest)
#Set Working Direcotry
setwd("C:/Users/Marin Family/Documents/R/Machine Learning Assignment")
#Set Seed
set.seed(1234)
#Load Downloaded Train and Test Files from Working Directory
training <- read.csv(file="pml-training.csv", na.strings=c("", "NA", "NULL"))
testing <- read.csv(file="pml-testing.csv", na.strings=c("", "NA", "NULL"))
#Remove NA columns and indentifier columns
training <- training[, colSums(is.na(training))==0]
dim(training)
#After review, the first 7 columns as they do not seem relevant to the outcome.
training <- training[,-c(1:7)]
testing <- testing[, -c(1:7)]
dim(training)
dim(testing)
#Create my test set
inTrain <- createDataPartition(y=training$classe, p=.7, list = FALSE)
trainset <- training[inTrain,]
#Create My Test Data
mytestset <- training[-inTrain,]
dim(trainset)
dim(mytestset)
#Load Coursera Test Data
testset <- read.csv("pml-testing.csv")
dim(testset)
```
## Evaluate the Data for NULLS and Zero Variance
Need to remove variables with too many NULLS (NA Values) and remove variables
```{r}
```
---
title: "Machine Learning Assignment"
author: "JM"
date: "August 6, 2017"
output: html_document
---
#Overview
Using devices such as Jawbone Up, Nike FuelBand, and Fitbit it is now possible to collect a large amount of data about personal activity relatively inexpensively. These type of devices are part of the quantified self movement â€“ a group of enthusiasts who take measurements about themselves regularly to improve their health, to find patterns in their behavior, or because they are tech geeks. One thing that people regularly do is quantify how much of a particular activity they do, but they rarely quantify how well they do it. In this project, your goal will be to use data from accelerometers on the belt, forearm, arm, and dumbell of 6 participants. They were asked to perform barbell lifts correctly and incorrectly in 5 different ways.
#Objective
The goal is to predict the manner in which they did the exercise. This is the "classe" variable in the training set.
#Load the Data
In this R snippe
```{r setup, include=FALSE}
#Load Libraries
library(caret)
library(randomForest)
#Set Working Direcotry
setwd("C:/Users/Marin Family/Documents/R/Machine Learning Assignment")
#Set Seed
set.seed(1234)
#Load Downloaded Train and Test Files from Working Directory
training <- read.csv(file="pml-training.csv", na.strings=c("", "NA", "NULL"))
testing <- read.csv(file="pml-testing.csv", na.strings=c("", "NA", "NULL"))
#Remove NA columns and indentifier columns
training <- training[, colSums(is.na(training))==0]
dim(training)
#After review, the first 7 columns as they do not seem relevant to the outcome.
training <- training[,-c(1:7)]
testing <- testing[, -c(1:7)]
dim(training)
dim(testing)
#Create my test set
inTrain <- createDataPartition(y=training$classe, p=.7, list = FALSE)
trainset <- training[inTrain,]
#Create My Test Data
mytestset <- training[-inTrain,]
dim(trainset)
dim(mytestset)
#Load Coursera Test Data
testset <- read.csv("pml-testing.csv")
dim(testset)
```
## Evaluate the Data for NULLS and Zero Variance
Need to remove variables with too many NULLS (NA Values) and remove variables
```{r}
```
---
title: "Machine Learning Assignment"
author: "JM"
date: "August 6, 2017"
output: html_document
---
#Overview
Using devices such as Jawbone Up, Nike FuelBand, and Fitbit it is now possible to collect a large amount of data about personal activity relatively inexpensively. These type of devices are part of the quantified self movement â€“ a group of enthusiasts who take measurements about themselves regularly to improve their health, to find patterns in their behavior, or because they are tech geeks. One thing that people regularly do is quantify how much of a particular activity they do, but they rarely quantify how well they do it. In this project, your goal will be to use data from accelerometers on the belt, forearm, arm, and dumbell of 6 participants. They were asked to perform barbell lifts correctly and incorrectly in 5 different ways.
#Objective
The goal is to predict the manner in which they did the exercise. This is the "classe" variable in the training set.
#Load the Data
In this R snippe
```{r setup, include=FALSE}
#Load Libraries
library(caret)
library(randomForest)
#Set Working Direcotry
setwd("C:/Users/Marin Family/Documents/R/Machine Learning Assignment")
#Set Seed
set.seed(1234)
#Load Downloaded Train and Test Files from Working Directory
training <- read.csv(file="pml-training.csv", na.strings=c("", "NA", "NULL"))
testing <- read.csv(file="pml-testing.csv", na.strings=c("", "NA", "NULL"))
#Remove NA columns and indentifier columns
training <- training[, colSums(is.na(training))==0]
dim(training)
#After review, the first 7 columns as they do not seem relevant to the outcome.
training <- training[,-c(1:7)]
testing <- testing[, -c(1:7)]
dim(training)
dim(testing)
#Create my test set
inTrain <- createDataPartition(y=training$classe, p=.7, list = FALSE)
trainset <- training[inTrain,]
#Create My Test Data
mytestset <- training[-inTrain,]
dim(trainset)
dim(mytestset)
#Load Coursera Test Data
testset <- read.csv("pml-testing.csv")
dim(testset)
```
## Evaluate the Data for NULLS and Zero Variance
Need to remove variables with too many NULLS (NA Values) and remove variables
#Load Libraries
library(caret)
library(randomForest)
#Set Working Direcotry
setwd("C:/Users/Marin Family/Documents/R/Machine Learning Assignment")
#Set Seed
set.seed(1234)
#Load Downloaded Train and Test Files from Working Directory
training <- read.csv(file="pml-training.csv", na.strings=c("", "NA", "NULL"))
testing <- read.csv(file="pml-testing.csv", na.strings=c("", "NA", "NULL"))
#Remove NA columns and indentifier columns
training <- training[, colSums(is.na(training))==0]
dim(training)
#After review, the first 7 columns as they do not seem relevant to the outcome.
training <- training[,-c(1:7)]
testing <- testing[, -c(1:7)]
dim(training)
dim(testing)
#Create my test set
inTrain <- createDataPartition(y=training$classe, p=.7, list = FALSE)
trainset <- training[inTrain,]
#Create My Test Data
mytestset <- training[-inTrain,]
dim(trainset)
dim(mytestset)
#Load Coursera Test Data
testset <- read.csv("pml-testing.csv")
dim(testset)
modelfit <- train(classe ~., data = trainset, method = "rf", prox = TRUE)
modelfit <- train(classe ~., data = trainset, method = "rf", prox = TRUE)
modelfit <- train(classe ~., data = training, method = "rf", prox = TRUE)
